{"name": "Successful fill form", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.table-responsive')).has texts ('Denis', 'Mironov', 'alex@egorov.com', 'Some street 1')\n\nReason: TypeError: 'WebElement' object is not iterable", "trace": "self = <selene.core.wait.Wait object at 0x0000020726E119C0>, fn = <selene.core.conditions.CollectionCondition object at 0x0000020726E11E10>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n.venv\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\lib\\site-packages\\selene\\core\\condition.py:151: in __call__\n    return self._fn(entity)\n.venv\\lib\\site-packages\\selene\\core\\condition.py:122: in fn\n    actual = query(entity)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncollection = <selene.core.entity.Element object at 0x0000020726E10F40>\n\n    def visible_texts(collection: Collection) -> List[str]:\n>       return [\n            webelement.text\n            for webelement in collection()\n            if webelement.is_displayed()\n        ]\nE       TypeError: 'WebElement' object is not iterable\n\n.venv\\lib\\site-packages\\selene\\core\\match.py:349: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_browser = <selene.core.entity.Browser object at 0x0000020726E13EB0>\n\n    @allure.title(\"Successful fill form\")\n    def test_successful(setup_browser):\n        browser = setup_browser\n        first_name = \"Denis\"\n        last_name = \"Mironov\"\n    \n        with allure.step(\"Open registrations form\"):\n            browser.open(\"https://demoqa.com/automation-practice-form\")\n            browser.element(\".practice-form-wrapper\").should(have.text(\"Student Registration Form\"))\n            browser.driver.execute_script(\"$('footer').remove()\")\n            browser.driver.execute_script(\"$('#fixedban').remove()\")\n    \n        with allure.step(\"Fill form\"):\n            browser.element(\"#firstName\").set_value(first_name)\n            browser.element(\"#lastName\").set_value(last_name)\n            browser.element(\"#userEmail\").set_value(\"asd@egorov.com\")\n            browser.element(\"#genterWrapper\").element(by.text(\"Other\")).click()\n            browser.element(\"#userNumber\").set_value(\"1231231230\")\n            browser.element(\"#dateOfBirthInput\").click()\n            browser.element('.react-datepicker__month-select').click().element('option[value=\"11\"]').click()\n            browser.element('.react-datepicker__year-select').type('1989')\n            browser.element('.react-datepicker__day.react-datepicker__day--025').click()\n            browser.element(\"#subjectsInput\").send_keys(\"Maths\")\n            browser.element(\"#subjectsInput\").press_enter()\n            browser.element(\"#hobbiesWrapper\").element(by.text(\"Sports\")).click()\n            browser.element('//input[@type=\"file\"]').type(os.path.abspath(\"tests\\image\\\\test.png\"))\n            browser.element(\"#currentAddress\").set_value(\"Some street 1\")\n            browser.element(\"#state\").click()\n            browser.element(\"#stateCity-wrapper\").element(by.text(\"NCR\")).click()\n            browser.element(\"#city\").click()\n            browser.element(\"#stateCity-wrapper\").element(by.text(\"Delhi\")).click()\n            browser.element(\"#submit\").click()\n    \n        with allure.step(\"Check form results\"):\n            browser.element(\"#example-modal-sizes-title-lg\").should(have.text(\"Thanks for submitting the form\"))\n>           browser.element(\".table-responsive\").should(\n                have.texts(first_name, last_name, \"alex@egorov.com\", \"Some street 1\"))\n\ntests\\test_registration_form.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\lib\\site-packages\\selene\\core\\entity.py:539: in should\n    super().should(condition)\n.venv\\lib\\site-packages\\selene\\core\\entity.py:126: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x0000020726E119C0>, fn = <selene.core.conditions.CollectionCondition object at 0x0000020726E11E10>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '.table-responsive')).has texts ('Denis', 'Mironov', 'alex@egorov.com', 'Some street 1')\nE                       \nE                       Reason: TypeError: 'WebElement' object is not iterable\n\n.venv\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "Open registrations form", "status": "passed", "start": 1700994991234, "stop": 1700994993740}, {"name": "Fill form", "status": "passed", "start": 1700994993740, "stop": 1700994998365}, {"name": "Check form results", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.table-responsive')).has texts ('Denis', 'Mironov', 'alex@egorov.com', 'Some street 1')\n\nReason: TypeError: 'WebElement' object is not iterable\n\n", "trace": "  File \"C:\\MyProjects\\jenkins_test\\tests\\test_registration_form.py\", line 42, in test_successful\n    browser.element(\".table-responsive\").should(\n  File \"C:\\MyProjects\\jenkins_test\\.venv\\lib\\site-packages\\selene\\core\\entity.py\", line 539, in should\n    super().should(condition)\n  File \"C:\\MyProjects\\jenkins_test\\.venv\\lib\\site-packages\\selene\\core\\entity.py\", line 126, in should\n    self.wait.for_(condition)\n  File \"C:\\MyProjects\\jenkins_test\\.venv\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1700994998365, "stop": 1700995002558}], "start": 1700994991233, "stop": 1700995002559, "uuid": "5219520b-9e11-4a92-a47c-0cd54e27ffc3", "historyId": "4e088263a2c2ee633d27c6e4f6afa3ed", "testCaseId": "a3da2b33f3ca61428ffa8484c0eb7dcc", "fullName": "tests.test_registration_form#test_successful", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_form"}, {"name": "host", "value": "DESKTOP-3GMC98Q"}, {"name": "thread", "value": "24344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_form"}]}